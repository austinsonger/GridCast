name: Build GRIDCAST App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.VERSION }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get Current Version from package.json
        id: get_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "::set-output name=VERSION::$VERSION"

      - name: Get Commit Hash
        id: get_commit
        run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}.${{ env.COMMIT_HASH }}
          release_name: GridCast v${{ env.VERSION }}.(${{ env.COMMIT_HASH }})
          draft: false
          prerelease: false

  build-macos:
    needs: create-release
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: Install Dependencies
        run: npm install

      - name: Build DMG for macOS (Both x64 and arm64)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run build:macos

      - name: Upload macOS Artifacts
        uses: actions/upload-artifact@main
        with:
          name: macos-build
          path: dist/*.dmg

  build-windows:
    needs: create-release
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: Install Dependencies
        run: npm install

      - name: Build Windows Installer
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run build:windows

      - name: Upload Windows Artifacts
        uses: actions/upload-artifact@main
        with:
          name: windows-build
          path: dist/*.exe

  upload-release-assets:
    needs: [build-macos, build-windows, create-release]
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ needs.create-release.outputs.version }}
    steps:
      - name: Download macOS Artifacts
        uses: actions/download-artifact@main
        with:
          name: macos-build
          path: dist

      - name: Download Windows Artifacts
        uses: actions/download-artifact@main
        with:
          name: windows-build
          path: dist

      - name: List macOS Directory Contents
        run: ls -l dist

      - name: Upload macOS Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: dist/GridCast-${{ env.VERSION }}.dmg
          asset_name: GridCast-${{ env.VERSION }}.dmg
          asset_content_type: application/octet-stream

      - name: Upload macOS ARM64 Asset
        uses: actions/upload-release-asset@v1
        env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
         upload_url: ${{ needs.create-release.outputs.upload_url }}
         asset_path: dist/GridCast-${{ env.VERSION }}-arm64.dmg
         asset_name: GridCast-${{ env.VERSION }}-arm64.dmg
         asset_content_type: application/octet-stream
         
      - name: Upload Windows Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: dist/GridCast Setup ${{ env.VERSION }}.exe
          asset_name: GridCast-${{ env.VERSION }}.exe
          asset_content_type: application/octet-stream
